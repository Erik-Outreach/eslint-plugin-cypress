module.exports = {
  root: true,
  parserOptions: {
    ecmaVersion: 2021,
    sourceType: 'script',
  },
  env: {
    node: true,
  },
  plugins: [
    'promise',
  ],
  extends: [
    'eslint:recommended',
    'plugin:eslint-plugin/recommended',
    'plugin:node/recommended',
    'plugin:promise/recommended',
  ],
  ignorePatterns: ['!.eslintrc.cjs'],
  rules: {
    'array-bracket-newline': [
      'error',
      'consistent',
    ],
    'array-bracket-spacing': [
      'error',
      'never',
    ],
    'arrow-parens': [
      'error',
      'always',
    ],
    'arrow-spacing': 'error',
    'block-spacing': 'error',
    'brace-style': [
      'error',
      '1tbs',
      {
        'allowSingleLine': false,
      },
    ],
    'function-paren-newline': [
      'error',
      'consistent',
    ],
    'comma-dangle': [
      'error',
      'always-multiline',
    ],
    'comma-spacing': 'error',
    'curly': [
      'error',
      'multi-line',
      'consistent',
    ],
    'constructor-super': 'error',
    'default-case': 'error',
    'eol-last': 'error',
    'eqeqeq': [
      'error',
      'allow-null',
    ],
    'indent': [
      'error',
      2,
      {
        // TODO: fix this, we shouldn't need to ignore TemplateLiterals
        'ignoredNodes': ['TemplateLiteral'],
        'SwitchCase': 1,
        'MemberExpression': 0,
      },
    ],
    'key-spacing': 'error',
    'keyword-spacing': 'error',
    'no-buffer-constructor': 'error',
    'no-case-declarations': 'error',
    'no-class-assign': 'error',
    'no-cond-assign': 'error',
    'no-console': 'error',
    'no-const-assign': 'error',
    'no-constant-condition': 'error',
    'no-control-regex': 'error',
    'no-debugger': 'error',
    'no-delete-var': 'error',
    'no-dupe-class-members': 'error',
    'no-dupe-keys': 'error',
    'no-dupe-args': 'error',
    'no-duplicate-case': 'error',
    'no-duplicate-imports': 'error',
    'no-else-return': [
      'error',
      {
        'allowElseIf': false,
      },
    ],
    'no-empty': 'error',
    'no-empty-character-class': 'error',
    'no-empty-pattern': 'error',
    'no-ex-assign': 'error',
    'no-extra-boolean-cast': 'error',
    'no-extra-semi': 'error',
    'no-fallthrough': 'error',
    'no-func-assign': 'error',
    'no-inner-declarations': 'error',
    'no-invalid-regexp': 'error',
    'no-irregular-whitespace': 'error',
    'no-mixed-spaces-and-tabs': 'error',
    'no-multiple-empty-lines': [
      'error',
      {
        'max': 1,
        'maxEOF': 0,
        'maxBOF': 0,
      },
    ],
    'no-multi-spaces': 'error',
    'no-negated-in-lhs': 'error',
    'no-new-symbol': 'error',
    'no-obj-calls': 'error',
    'no-octal': 'error',
    'no-redeclare': 'error',
    'no-regex-spaces': 'error',
    'no-self-assign': 'error',
    'no-spaced-func': 'error',
    'no-sparse-arrays': 'error',
    'no-this-before-super': 'error',
    'no-trailing-spaces': 'error',
    'no-undef': 'error',
    'no-unexpected-multiline': 'error',
    'no-unneeded-ternary': 'error',
    'no-unreachable': 'error',
    'no-unused-labels': 'error',
    'no-unused-vars': ['error', {
      argsIgnorePattern: '^_',
      ignoreRestSiblings: true,
      varsIgnorePattern: '^_',
    }],
    'no-useless-concat': 'error',
    'no-useless-constructor': 'error',
    'no-var': 'error',
    'no-whitespace-before-property': 'error',
    'object-curly-spacing': [
      'error',
      'always',
    ],
    'object-shorthand': 'error',
    'one-var': [
      'error',
      'never',
    ],
    'padded-blocks': ['error', 'never'],
    'padding-line-between-statements': [
      'error',
      {
        'blankLine': 'always',
        'prev': '*',
        'next': 'return',
      },
      {
        'blankLine': 'always',
        'prev': [
          'const',
          'let',
          'var',
          'if',
          'while',
          'export',
          'cjs-export',
          'import',
          'cjs-import',
          'multiline-expression',
        ],
        'next': '*',
      },
      {
        'blankLine': 'any',
        'prev': [
          'const',
          'let',
          'var',
          'import',
          'cjs-import',
        ],
        'next': [
          'const',
          'let',
          'var',
          'import',
          'cjs-import',
        ],
      },
    ],
    'prefer-rest-params': 'error',
    'prefer-spread': 'error',
    'prefer-template': 'error',
    'quotes': [
      'error',
      'single',
      {
        'allowTemplateLiterals': true,
      },
    ],
    'semi': [
      'error',
      'never',
    ],
    'semi-spacing': 'error',
    'space-before-blocks': 'error',
    'space-before-function-paren': 'error',
    'space-in-parens': [
      'error',
      'never',
    ],
    'space-infix-ops': 'error',
    'space-unary-ops': 'error',
    // TODO: change this back to 'error'
    'template-curly-spacing': 'off',
    'use-isnan': 'error',
    'valid-typeof': 'error',
  },
}
